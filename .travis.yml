arch: arm64           # LXD container based build for OSS only
os: linux             # required for arch different than amd64
dist: focal           # or bionic | xenial with xenial as default

language: C
services:
- docker
# cache:
#   directories:
#     - docker_cache

# before_script:
# #- docker load -i docker_images/images.tar || true
# #-  TOKEN=$GITHUB_TOKEN ./geometry2_teex.sh build_docker
# - |
#   echo Now loading...
#   filename=docker_cache/saved_images.tar
#   mkdir -p docker_cache
#   if [[ -f "$filename" ]]; then
#     echo "got one from cache."
#     docker load < "$filename"
#   else
#     echo "from scratach";
#     docker build --build-arg GIT_ACCESS_TOKEN=$GITHUB_TOKEN -t $IMAGE .
#     docker save -o "$filename" $IMAGE 
#   fi

before_script:
-    docker build --build-arg GIT_ACCESS_TOKEN=$GITHUB_TOKEN -t $IMAGE .
  




script:
- echo "Triggered 10h34"
- gcc hello.c
#- make buffer_core_test.shaping
- docker run -it test04 /bin/bash -c "pwd"
- docker run -it test04 /bin/bash -c "ls -l /opt"
#cache:
#  directories:
#  - docker_images


#before_cache:
#- docker save -o docker_images/images.tar $(docker images -a -q)


env:
  global:
  - IMAGE=test04
  - MOUNT=/mnt/local
  - secure: 0c1qA4Lz5tg3bKVxsDMp3eugv1TQXhBb25X8ObwMnqTxK//u7pu9QkH0wEf5vN/B0u4uYAai/08j281Ym1VANtfg+Iw+TDIuLK7WiZtN19Rp98zkmo/n71trrl8eWHydFCWAtpOzgAgPIvs8sdR0tsUemnANjUfc/TRJHMp7ARTAvUez80CuhHdkyZXLWgY5CrLYUIuZQPoziQDkmxawLs5GRkQlAdVfbMXkzyRtpxwBcjLjlIbZRvV4rcyLntiBVNVTUXV9mO3UtnJwpxsXtKDELyPNSLfLPldk9i6GkhqXsUJzFiKjGeSGOtKvWZaz0oagOzP/f+jWOvAVrXQm9p7crR4raui9OoXWFkr+EKwG3gfaVVf07DzAoYQgjt7EnOWrAMfWIqmDCc7AGwPeykdjJiPU7hJjAsny5ELNWEUpDRR+18946Vgq/NLmnTOr5bCuZtQWR5+f4twB3ncyrkL5+i0pPwNUso+vNHHoxv+k0aLQPj65JWmkBM9PRpIjbyz5Aalfvumb69sV2rIoiDqrVu0lCgByrv69iOHo8IE4eNb2bqwh377Q62iW0cPmeS52MNVFblZQXICpoSjPy0QhZnnU8PlfOtuIUhl/97RqkXIzl1qcP+Uvajo3ZTQ/dC8yt4412BiE9PxXSib65QLRra3emdADzGrgfPYJo54=
